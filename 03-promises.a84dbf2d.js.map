{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIP,IAAMQ,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,0BAG/BH,EAAKM,KAAKC,iBAAiB,SAE3B,SAAwBC,GACtBA,EAAEC,iBAMF,IAJA,IAAIJ,EAASK,OAAOV,EAAKK,OAAOM,OAC5BP,EAAOM,OAAOV,EAAKI,KAAKO,OACxBC,EAAeF,OAAOV,EAAKC,WAAWU,OAEjCE,EAAI,EAAGA,EAAIR,EAAQQ,GAAK,EAC/BvB,EAAcuB,EAAI,EAAGD,GAClBE,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAAK,CAC9D2B,QAAO,SAGZC,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAA4B,OAAOK,QAAQ,sBAAqCH,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,MAAK,CAC7D2B,QAAS,SAIfP,GAAgBR,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  form: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('click', onClickBtnForm);\n\nfunction onClickBtnForm(e) {\n  e.preventDefault();\n\n  let amount = Number(refs.amount.value);\n  let step = Number(refs.step.value);\n  let currentDelay = Number(refs.firstDelay.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 3000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 3000,\n        });\n      });\n\n    currentDelay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$refs","firstDelay","document","querySelector","step","amount","form","addEventListener","e","preventDefault","Number","value","currentDelay","i","then","param","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.a84dbf2d.js.map"}